"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheNodeVariableType = exports.CacheNodeVariable = exports.CacheNode = void 0;
const node_opcua_client_1 = require("node-opcua-client");
const private_1 = require("./private");
function w(s, l) {
    return (s + "                                                                ").substr(0, l);
}
class CacheNode {
    constructor(nodeId) {
        this.description = node_opcua_client_1.coerceLocalizedText("");
        /**
         */
        this.nodeId = nodeId;
        /**
         */
        this.browseName = private_1.pendingBrowseName;
        /**
         */
        this.references = [];
        this.nodeClass = node_opcua_client_1.NodeClass.Unspecified;
        this.typeDefinition = "";
        this.displayName = new node_opcua_client_1.LocalizedText({});
    }
    toString() {
        let str = w(this.nodeId.toString(), 20);
        str += " " + w(this.browseName.toString(), 30);
        str += " typeDef : " + w(this.typeDefinition ? this.typeDefinition.toString() : "", 30);
        str += " nodeClass : " + w(node_opcua_client_1.NodeClass[this.nodeClass], 12);
        return str;
    }
    dispose() {
        this.parent = undefined;
        this.referenceToParent = undefined;
        this.references.length = 0;
        this.typeDefinition = undefined;
    }
}
exports.CacheNode = CacheNode;
// tslint:disable: max-classes-per-file
class CacheNodeVariable extends CacheNode {
    constructor(nodeId) {
        super(nodeId);
        this.nodeClass = node_opcua_client_1.NodeClass.Variable;
    }
    dispose() {
        super.dispose();
        if (this.dataValue) {
            this.dataValue = undefined;
        }
    }
}
exports.CacheNodeVariable = CacheNodeVariable;
class CacheNodeVariableType extends CacheNode {
    constructor(nodeId) {
        super(nodeId);
        this.nodeClass = node_opcua_client_1.NodeClass.VariableType;
    }
    dispose() {
        super.dispose();
        if (this.dataValue) {
            this.dataValue = undefined;
        }
    }
}
exports.CacheNodeVariableType = CacheNodeVariableType;
//# sourceMappingURL=cache_node.js.map