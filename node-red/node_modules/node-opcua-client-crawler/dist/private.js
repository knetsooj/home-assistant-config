"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.remove_cycle = exports.dedup_reference = exports.pendingBrowseName = void 0;
const node_opcua_assert_1 = require("node-opcua-assert");
const node_opcua_client_1 = require("node-opcua-client");
const node_opcua_pki_1 = require("node-opcua-pki");
exports.pendingBrowseName = new node_opcua_client_1.QualifiedName({ name: "pending" });
function dedup_reference(references) {
    const results = [];
    const dedup = {};
    for (const reference of references) {
        const key = reference.referenceTypeId.toString() + reference.nodeId.toString();
        /* istanbul ignore next */
        if (dedup[key]) {
            node_opcua_pki_1.debugLog(" Warning => Duplicated reference found  !!!! please contact the server vendor");
            node_opcua_pki_1.debugLog(reference.toString());
            continue;
        }
        dedup[key] = reference;
        results.push(reference);
    }
    return results;
}
exports.dedup_reference = dedup_reference;
function remove_cycle(object, innerCallback) {
    const visitedNodeIds = {};
    function hasBeenVisited(e) {
        const key1 = e.nodeId.toString();
        return visitedNodeIds[key1];
    }
    function setVisited(e) {
        const key1 = e.nodeId.toString();
        return (visitedNodeIds[key1] = e);
    }
    function mark_array(arr) {
        if (!arr) {
            return;
        }
        node_opcua_assert_1.assert(Array.isArray(arr));
        for (const e of arr) {
            if (hasBeenVisited(e)) {
                return;
            }
            else {
                setVisited(e);
                explorerObject(e);
            }
        }
    }
    function explorerObject(obj) {
        mark_array(obj.organizes);
        mark_array(obj.hasComponent);
        mark_array(obj.hasNotifier);
        mark_array(obj.hasProperty);
    }
    explorerObject(object);
    innerCallback(null, object);
}
exports.remove_cycle = remove_cycle;
//# sourceMappingURL=private.js.map