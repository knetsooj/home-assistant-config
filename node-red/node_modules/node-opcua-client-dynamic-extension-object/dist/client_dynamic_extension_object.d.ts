import { DataTypeFactory, FieldCategory, StructuredTypeSchema, TypeDefinition } from "node-opcua-factory";
import { NodeId } from "node-opcua-nodeid";
import { IBasicSession } from "node-opcua-pseudo-session";
import { DataTypeDefinition } from "node-opcua-types";
import { ExtraDataTypeManager } from "./extra_data_type_manager";
/**
 * Extract all custom dataType
 * @param session
 * @param dataTypeManager
 * @async
 */
export declare function populateDataTypeManager(session: IBasicSession, dataTypeManager: ExtraDataTypeManager): Promise<void>;
export declare function getDataTypeDefinition(session: IBasicSession, dataTypeNodeId: NodeId, dataTypeManager: ExtraDataTypeManager): Promise<StructuredTypeSchema>;
interface Cache {
    fieldTypeName: string;
    schema: TypeDefinition;
    category: FieldCategory;
}
export declare function convertDataTypeDefinitionToStructureTypeSchema(session: IBasicSession, dataTypeNodeId: NodeId, name: string, definition: DataTypeDefinition, dataTypeFactory: DataTypeFactory, cache: {
    [key: string]: Cache;
}): Promise<StructuredTypeSchema>;
export {};
