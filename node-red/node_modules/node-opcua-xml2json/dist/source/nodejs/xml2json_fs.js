"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Xml2JsonFs = void 0;
const fs = require("fs");
const xml2json_1 = require("../xml2json");
class Xml2JsonFs extends xml2json_1.Xml2Json {
    parse(xmlFile, callback) {
        if (!callback) {
            throw new Error("internal error");
        }
        const readWholeFile = true;
        if (readWholeFile) {
            // slightly faster but require more memory ..
            fs.readFile(xmlFile, (err, data) => {
                if (err) {
                    return callback(err);
                }
                if (data[0] === 0xef && data[1] === 0xbb && data[2] === 0xbf) {
                    data = data.slice(3);
                }
                const dataAsString = data.toString();
                const parser = this._prepareParser(callback);
                parser.write(dataAsString);
                parser.end();
            });
        }
        else {
            const Bomstrip = require("bomstrip");
            const parser = this._prepareParser(callback);
            fs.createReadStream(xmlFile, { autoClose: true, encoding: "utf8" }).pipe(new Bomstrip()).pipe(parser);
        }
    }
}
exports.Xml2JsonFs = Xml2JsonFs;
// tslint:disable:no-var-requires
const thenify = require("thenify");
const opts = { multiArgs: false };
Xml2JsonFs.prototype.parse = thenify.withCallback(Xml2JsonFs.prototype.parse, opts);
//# sourceMappingURL=xml2json_fs.js.map